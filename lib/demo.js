// Generated by CoffeeScript 2.0.1
(function() {
  //###########################################################################################################
  var CND, KWIC, alert, badge, debug, demo_1, demo_2, echo, help, info, log, rpr, texts, unique_words_from_text, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'KWIC/demo';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  KWIC = require('./main');

  // text = """a tram also known as tramcar and in north america known as streetcar trolley or trolley car
  // is a rail vehicle which runs on tracks along public urban streets called street running and also
  // sometimes on separate rights of way the lines or networks operated by tramcars are called tramways
  // tramways powered by electricity which were the most common type historically were once called electric
  // street railways however trams were widely used in urban areas before the universal adoption of
  // electrification and thus the other methods of powering trams is listed below under history

  // tram lines may also run between cities and or towns for example interurbans tram train and or partially
  // grade separated even in the cities light rail very occasionally trams also carry freight tram vehicles
  // are usually lighter and shorter than conventional trains and rapid transit trains but the size of trams
  // particularly light rail vehicles is rapidly increasing some trams for instance tram trains may also run
  // on ordinary railway tracks a tramway may be upgraded to a light rail or a rapid transit line two urban
  // tramways may be connected to an interurban etc

  // for all these reasons the differences between the various modes of rail transportation are often
  // indistinct

  // today most trams use electrical power usually fed by an overhead pantograph in some cases by a sliding
  // shoe on a third rail trolley pole or bow collector if necessary they may have dual power systems
  // electricity in city streets and diesel in more rural environments

  // in the united states the term tram has sometimes been used for rubber tired trackless trains which are not
  // related to the other vehicles covered in this article
  // a b c d e f g h i j k l m n o p q r s t u v w x y z
  // call
  // """

  // # text = """a e costarica america abcde acute ab ac ad"""
  // text = """
  // abcd
  // abdc
  // acbd
  // acdb
  // adbc
  // adcb
  // bacd
  // badc
  // bcad
  // bcda
  // bdac
  // bdca
  // cabd
  // cadb
  // cbad
  // cbda
  // cdab
  // cdba
  // dabc
  // dacb
  // dbac
  // dbca
  // dcab
  // dcba
  // a b c ab ac ba bc ca cb abc acb cab cba bac bca cad cabs cabdriver"""

  // text = ( require 'fs' ).readFileSync '/Volumes/Storage/io/wordlists/top10000de.txt', 'utf-8'
  // text = text.replace /^#.*/, ''
  // text = text.toLowerCase()
  // lines = text.split '\n'
  // lines = ( line for line in lines when not ( /^\s*#/ ).test line )
  // text = lines.join ' '

  // text = """a b c ab ac"""

  // text = """
  // all
  // call
  // called
  // usually
  // partially
  // partiallys
  // historically
  // xxxxxxxcally
  // xxxxxxxcallx
  // xxxxxxcallx
  // occasionally
  // along
  // also
  // """
  texts = {
    trains: "gleis-drei-eck\nei-sen-bahn\nmo-dell-bahn\nbahn-mo-dell\ngleis-bau\ndrei-eck\nbahn-gleis\ngleis\nbahn-schran-ke\nbahn-hof\nneben-bahn\nklein-bahn\nauto-bahn\nauto-fahrt\nauto-fahr-er\nbahn-fahr-kar-te\nbahn-fahrt\nzug-fahrt\nbahn-fahr-er\nauto-zug"
  };

  //-----------------------------------------------------------------------------------------------------------
  unique_words_from_text = function(text) {
    var R, i, len, seen, word, words;
    seen = new Set();
    words = text.split(/\s+/);
    words = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = words.length; i < len; i++) {
        word = words[i];
        if (word.length > 0) {
          results.push(word);
        }
      }
      return results;
    })();
    words.sort();
    R = [];
    for (i = 0, len = words.length; i < len; i++) {
      word = words[i];
      if (seen.has(word)) {
        continue;
      }
      seen.add(word);
      R.push(word);
    }
    return R;
  };

  // return LODASH.uniq words, true

  //-----------------------------------------------------------------------------------------------------------
  demo_1 = function() {
    var collection, entries, entry, factors, i, infix, j, len, len1, permutation, permutations, prefix, r_weights, suffix, text, weights;
    // text        = """a b c ab ac ba bc ca cb abc acb cab cba bac bca cad cabs cabdriver"""
    text = texts['trains'];
    text = text.replace(/-/g, '');
    entries = unique_words_from_text(text);
    collection = [];
    for (i = 0, len = entries.length; i < len; i++) {
      entry = entries[i];
      factors = KWIC.get_factors(entry);
      weights = KWIC.get_weights(factors);
      permutations = KWIC.get_permutations(factors, weights);
      collection.push([permutations, entry]);
      for (j = 0, len1 = permutations.length; j < len1; j++) {
        permutation = permutations[j];
        // debug '©uhwuc', permutation, entry
        [r_weights, infix, suffix, prefix] = permutation;
      }
    }
    return KWIC.report(collection);
  };

  //-----------------------------------------------------------------------------------------------------------
  demo_2 = function() {
    var collection, display, entries, entry, factors, i, len, permutations, text, weights;
    text = texts['trains'];
    entries = unique_words_from_text(text);
    collection = [];
    for (i = 0, len = entries.length; i < len; i++) {
      entry = entries[i];
      factors = KWIC.get_factors(entry, function(text) {
        var part;
        return (function() {
          var j, len1, ref, results;
          ref = text.split('-');
          results = [];
          for (j = 0, len1 = ref.length; j < len1; j++) {
            part = ref[j];
            results.push(`(${part})`);
          }
          return results;
        })();
      });
      weights = KWIC.get_weights(factors, function(factor) {
        var chr, chrs;
        chrs = Array.from(factor);
        chrs = chrs.slice(1, chrs.length - 1);
        return (function() {
          var j, len1, results;
          results = [];
          for (j = 0, len1 = chrs.length; j < len1; j++) {
            chr = chrs[j];
            results.push(chr.codePointAt(0));
          }
          return results;
        })();
      });
      // debug '©GFNKC', weights
      permutations = KWIC.get_permutations(factors, weights);
      display = entry.replace(/-/g, '');
      collection.push([permutations, display]);
    }
    // for permutation in permutations
    //   [ r_weights, infix, suffix, prefix, ] = permutation
    return KWIC.report(collection);
  };

  //###########################################################################################################
  if (module.parent == null) {
    demo_1();
    demo_2();
  }

  // echo()
// entries     = unique_words_from_text text
// collection  = []
// for entry in entries
//   collection.push [ ( KWIC.permute entry ), entry, ]
// KWIC.report collection
// debug '©BX7Tw', CODEC[ 'keys' ][ 'lo' ]

// demo_permute = ->
//   d   = [ 'a', 'b', 'c', 'd', ]
//   nr  = 0
//   loop
//     nr += +1
//     help nr, d.join ''
//     break unless CND.ez_permute d
// demo_permute()

}).call(this);

//# sourceMappingURL=demo.js.map
